<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Jobs\putCommandInTaskSpooler;
use App\Target;
use App\Task\wpscanCommand;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class wpscanController extends Controller
{
    /**
     * @param \Illuminate\Http\Request $request
     * @param \App\Target              $target
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function scanDomain(Request $request, Target $target): JsonResponse
    {

        $this->validate($request, [
            'url'      => 'required|string|min:4|max:255|regex:/^[\w\.-:\/]*$/',
            'threads'  => 'required|integer|min:1',
            'uidstart' => 'required|integer|min:1',
            'uidend'   => 'required|integer|min:1',
            'plugins'  => 'required|string|in:p,vp,ap',
            'themes'   => 'required|string|in:t,vt,at',
        ]);

        $url = $request->input('url');
        $threads = $request->input('threads');
        $ustart = $request->input('uidstart');
        $uend = $request->input('uidend');
        $plugins = $request->input('plugins');
        $themes = $request->input('themes');

        $command = wpscanCommand::create($target, $url, $threads, $ustart, $uend, $plugins, $themes);
        putCommandInTaskSpooler::dispatch($command);

        return response()->json([
            'status'  => true,
            'command' => $command,
        ]);
    }


}
