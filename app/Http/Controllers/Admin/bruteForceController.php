<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Project;
use App\Task\bruteforceCommand;
use App\Task\htaccessBruteCommand;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class bruteForceController extends Controller
{

    /**
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function startHtaccessBruteforcing(Request $request): JsonResponse
    {

        $this->validate($request, [
            'url'      => [
                'required',
                'string',
                'min:4',
                'regex:/^[\w|\.|\/|:|-]*$/',
            ],
            'timeout'  => 'required|int|min:0',
            'threads'  => 'required|int|min:1',
            'userlist' => ['required', 'string', 'regex:/^[\w|\.|-]*$/'],
            'passlist' => ['required', 'string', 'regex:/^[\w|\.|-]*$/'],
        ]);

        $url = $request->input('url');
        $timeout = $request->input("timeout");
        $threads = $request->input("threads");
        $usernames = $request->input("userlist");
        $passwords = $request->input("passlist");

        return response()->json([
            'status'       => true,
            'startcommand' => htaccessBruteCommand::create(
                $url,
                $usernames,
                $passwords,
                $threads,
                $timeout
            ),
        ]);
    }

    /**
     * @param \Illuminate\Http\Request $request
     * @param \App\Project             $project
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function startRandomizedSubdomainBruteForcing(Request $request, Project $project): JsonResponse
    {

        $this->validate($request, [
            'domain'       => [
                'required',
                'string',
                'min:4',
                'regex:/^[\w|\.|-]*$/',
            ],
            'min_parts'    => 'required|int|min:1',
            'max_parts'    => 'required|int|max:8',
            'timeout'      => 'required|int|min:10',
            'report_every' => 'required|int|min:25',
            'imploder'     => 'required|string|min:1|max:1',
        ]);

        $domain = $request->input('domain');
        $min_parts = $request->input("min_parts");
        $max_parts = $request->input("max_parts");
        $imploder = $request->input("imploder");
        $timeout = $request->input("timeout");
        $report_every = $request->input("report_every");

        return response()->json([
            'status'       => true,
            'startcommand' => bruteforceCommand::create(
                    $project,
                    $domain,
                    $min_parts,
                    $max_parts,
                    $imploder,
                    $timeout,
                    $report_every
                ) . " &",
            'killcommand'  => "kill $(ps aux | grep 'artisan bruteforce:subdomains' | awk '{print $2}')",
        ]);
    }

}
