<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Jobs\StartSubdomainBruteForce;
use App\Project;
use App\Task\bruteforceCommand;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class bruteForceController extends Controller
{
    /**
     * @param \Illuminate\Http\Request $request
     * @param \App\Project             $project
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function startRandomizedSubdomainBruteForcing(Request $request, Project $project): JsonResponse
    {

        $this->validate($request, [
            'domain'    => [
                'required',
                'string',
                'min:4',
                'regex:/^[\w|\.|-]*$/',
            ],
            'min_parts' => 'required|int|min:1',
            'max_parts' => 'required|int|max:8',
            'timeout'   => 'required|int|min:10',
            'imploder'  => 'required|string|min:1|max:1',
        ]);

        $domain = $request->input('domain');
        $min_parts = $request->input("min_parts");
        $max_parts = $request->input("max_parts");
        $imploder = $request->input("imploder");
        $timeout = $request->input("timeout");

        return response()->json([
            'status'       => true,
            'startcommand' => bruteforceCommand::create($project, $domain, $min_parts, $max_parts, $imploder,
                    $timeout) . " &",
            'killcommand'  => "kill $(ps aux | grep 'artisan bruteforce:subdomains' | awk '{print $2}')",
        ]);
    }

}
