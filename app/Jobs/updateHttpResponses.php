<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Jobs;

use App\Target;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\Schema;

/**
 * Class updateHttpResponses
 * @package App\Jobs
 */
class updateHttpResponses implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;
    /**
     * @var int
     */
    public $timeout = 30;
    /**
     * @var int
     */
    public $tries = 1;
    /**
     * @var \App\Target
     */
    protected $targets = [];

    /**
     * Create a new job instance.
     *
     * @return void
     */
    public function __construct()
    {
        if (Schema::hasTable('targets')) {
            $this->targets = Target::whereNull("autoFetchedHttpData_at")->whereNotNull("autoFetchedDNSData_at")->whereNotNull("ip")->take(75)->get();
        }
    }

    /**
     * Execute the job.
     *
     * @return void
     */
    public function handle()
    {
        foreach ($this->targets as $target) {

            if (is_null($target->autoFetchedHttpData_at)) {
                FetchHttpDataForHost::dispatch($target)->onQueue('low');
            }
        }
    }
}
